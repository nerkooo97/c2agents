// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Agent definition generator flow.
 *
 * This file exports:
 * - `generateAgentDefinition`: A function that generates an initial agent definition based on a high-level description of the agent's role and capabilities.
 * - `GenerateAgentDefinitionInput`: The input type for the `generateAgentDefinition` function.
 * - `GenerateAgentDefinitionOutput`: The output type for the `generateAgentDefinition` function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateAgentDefinitionInputSchema = z.object({
  agentDescription: z
    .string()
    .describe(
      'A high-level description of the agent\'s role and capabilities.'
    ),
});
export type GenerateAgentDefinitionInput = z.infer<
  typeof GenerateAgentDefinitionInputSchema
>;

const GenerateAgentDefinitionOutputSchema = z.object({
  agentDefinition: z
    .string()
    .describe('The generated agent definition, including the prompt.'),
});
export type GenerateAgentDefinitionOutput = z.infer<
  typeof GenerateAgentDefinitionOutputSchema
>;

export async function generateAgentDefinition(
  input: GenerateAgentDefinitionInput
): Promise<GenerateAgentDefinitionOutput> {
  return generateAgentDefinitionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateAgentDefinitionPrompt',
  input: {schema: GenerateAgentDefinitionInputSchema},
  output: {schema: GenerateAgentDefinitionOutputSchema},
  prompt: `You are an AI agent definition generator. Based on the provided description, generate an initial agent definition, including the prompt and suggested tools.

Agent Description: {{{agentDescription}}}

Agent Definition:`, // No tools array since none are available yet
});

const generateAgentDefinitionFlow = ai.defineFlow(
  {
    name: 'generateAgentDefinitionFlow',
    inputSchema: GenerateAgentDefinitionInputSchema,
    outputSchema: GenerateAgentDefinitionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
